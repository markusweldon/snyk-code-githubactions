name: Snyk Code Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  snyk:
    runs-on: ubuntu-latest
    env:
      ###############################################################
      # IMPORTANT: Set the correct regional API endpoint for your Snyk account
      # Default/Global: https://api.snyk.io
      # US: https://api.us.snyk.io  
      # EU: https://api.eu.snyk.io
      # AU: https://api.au.snyk.io
      ###############################################################
      SNYK_API: https://api.snyk.io
      
      ###############################################################
      # Set to true to fail the pipeline on high/critical severity issues (default: false)
      # By default, the scan continues even if issues are found (exit code 0)
      # To fail on high/critical issues, set SNYK_CODE_FAIL_ON_ISSUES: true above
      ###############################################################
      SNYK_CODE_FAIL_ON_ISSUES: true
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Snyk
        uses: snyk/actions/setup@master

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 🛡️ Snyk Code test (with timing)
        run: |
          echo "⏱️ Starting Snyk Code scan..."
          start_time=$(date +%s)
          
          # Run Snyk Code test
          if [[ "${{ env.SNYK_CODE_FAIL_ON_ISSUES }}" == "true" ]]; then
            echo "❗ Pipeline will fail if high/critical issues are found"
            snyk code test --severity-threshold=high && SCAN_RESULT=0 || SCAN_RESULT=$?
          else
            echo "ℹ️ Pipeline will continue regardless of issues found (default behavior)"
            snyk code test || true
            SCAN_RESULT=0
          fi
          
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "🔥 SNYK CODE SCAN COMPLETED IN: $duration SECONDS 🔥"
          
          # If scan failed due to vulnerabilities, provide clear message
          if [[ $SCAN_RESULT -ne 0 ]]; then
            echo ""
            echo "❌ ==========================================="
            echo "❌ SECURITY GATE BLOCKED THIS DEPLOYMENT"
            echo "❌ High or Critical vulnerabilities detected!"
            echo "❌ Fix the issues above before merging."
            echo "❌ ==========================================="
            echo ""
            echo "💡 Tip: Download the HTML report below for detailed remediation guidance"
          fi
          
          # Exit with the scan result AFTER we output the message
          exit $SCAN_RESULT
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 📊 Generate HTML Report
        if: always()
        run: |
          echo "📊 Generating HTML report..."
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          REPORT_NAME="${{ github.event.repository.name }}-snyk-code-report-${TIMESTAMP}.html"
          snyk code test --json > snyk-code.json || true
          npx snyk-to-html -i snyk-code.json -o "${REPORT_NAME}"
          echo "✅ HTML report generated: ${REPORT_NAME}"
          echo "REPORT_NAME=${REPORT_NAME}" >> $GITHUB_ENV
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 📤 Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-snyk-code-report
          path: ${{ env.REPORT_NAME }}

      - name: ✅ Summary
        if: always()
        run: |
          echo "📥 Download report: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"